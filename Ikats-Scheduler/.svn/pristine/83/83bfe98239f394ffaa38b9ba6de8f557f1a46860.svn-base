package com.ikats.scheduler.job;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONPath;
import com.ikats.scheduler.entity.bean.GYRecordBean;
import com.ikats.scheduler.entity.bean.GYSkuBean;
import com.ikats.scheduler.entity.enumerate.GYStatus;
import com.ikats.scheduler.logic.GYRecordLogic;
import com.ikats.scheduler.logic.GYSkuLogic;
import com.ikats.scheduler.util.GuanYiPostUtil;
import com.ikats.scheduler.util.JedisUtil;
import com.ikats.scheduler.util.SystemOutMessage;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.quartz.QuartzJobBean;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * 定时任务---获取管易商品备案 - 所有的已舍弃
 * @Author : liu kuo
 * @Date : 2017/10/26 15:14.
 * @Description : Indulge in study , wasting away
 */

public class GuanyYiSkuRegisterJob_temp extends QuartzJobBean
{

    @Autowired
    private GYSkuLogic skuLogic;

    @Autowired
    private GYRecordLogic recordLogic;

    private static String FACE_NAME = "gy.erp.items.get";

    @Override
    protected void executeInternal(JobExecutionContext jobExecutionContext) throws JobExecutionException
    {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SystemOutMessage.start("GuanYi_GetSkuRegister",sdf.format(new Date()));
        if(null == skuLogic || null == recordLogic)
        {
            SystemOutMessage.body("false 系统异常");
            return;
        }
        try
        {
            JSONObject sendJson = new JSONObject();
            sendJson.put("appkey", GuanYiPostUtil.APPKEY);
            sendJson.put("sessionkey", GuanYiPostUtil.SESSIONKEY);
            sendJson.put("method",FACE_NAME);
            sendJson.put("page_no", JedisUtil.getGuanYiSkuPageNo().toString());
            sendJson.put("page_size","100");
            String sendString = sendJson.toJSONString();
            String sign = GuanYiPostUtil.sign(sendString, GuanYiPostUtil.SECRET);
            sendJson.put("sign",sign);
            String sendParam = sendJson.toJSONString();
            //管易回执
            String result = GuanYiPostUtil.sendPost(GuanYiPostUtil.URL,sendParam);
            JSONObject jsonGy = (JSONObject) JSONPath.read(result,"$");
            String success = jsonGy.getString("success");
            //保存发送记录
            GYRecordBean recordBean = new GYRecordBean();
            recordBean.setAppKey(GuanYiPostUtil.APPKEY);
            recordBean.setGyRequest(sendParam);
            recordBean.setGyResponse(result);
            recordBean.setCreateTime(new Date());
            recordBean.setSuccess(success);
            recordBean.setFace(FACE_NAME);
            this.recordLogic.insert(recordBean);
            if(!this.recordLogic.getSuccess())
            {
                SystemOutMessage.body( this.recordLogic.getSuccess()+ this.recordLogic.getMessage());
                return;
            }
            if(success.equals("false"))
            {
                return;
            }
            JSONArray items = (JSONArray)jsonGy.get("items");

            if(items.size() == 0)
            {
                   JedisUtil.initGuanYiSkuPageNo();
                   System.out.println("----------------------- 商品备案查询的页数已重置 ----------------------");
            }
            List<GYSkuBean> skuBeans = new ArrayList<GYSkuBean>();
            for(int i=0;i<items.size();i++)
            {
                JSONObject product = (JSONObject) items.get(i);
                String itemCode = product.getString("code");
                JSONArray skus = (JSONArray)product.get("skus");
                for(int j=0;j<skus.size();j++)
                {
                    JSONObject sku = (JSONObject) skus.get(j);
                    String skuCode = sku.getString("code");

                    String omsXml = "<Service>\n" +
                            "  <ServiceURL>SKURegister</ServiceURL>\n" +
                            "  <ServiceAction>TRANSACTION</ServiceAction>\n" +
                            "  <ServiceData>\n" +
                            "    <SKURegister>\n" +
                            "      <ClientId></ClientId>\n" +
                            "      <SKUCode>"+ itemCode + "_" + skuCode +"</SKUCode>\n" +
                            "      <GoodsItemNo></GoodsItemNo>\n" +
                            "      <SKUName>"+ sku.getString("name") +"</SKUName>\n" +
                            "      <SKUPrice>"+ sku.getString("sales_price") +"</SKUPrice>\n" +
                            "      <SKUCount></SKUCount>\n" +
                            "      <SKUModel>" + sku.getString("name") + "</SKUModel>\n" +
                            "      <MailTaxNo>"+ sku.getString("tax_no") + "</MailTaxNo>\n" +
                            "      <HsCode></HsCode>\n" +
                            "      <WarehouseNo></WarehouseNo>\n" +
                            "      <WarehouseLocation></WarehouseLocation>\n" +
                            "      <DeclareMeasureUnit></DeclareMeasureUnit>\n" +
                            "      <ProductionMarketingCountry></ProductionMarketingCountry>\n" +
                            "      <GoodsNetWeight>"+ sku.getString("weight") + "</GoodsNetWeight>\n" +
                            "      <GoodsRoughWeight>" + sku.getString("weight") + "</GoodsRoughWeight>\n" +
                            "      <Length></Length> \n  " +
                            "     <Width></Width> \n  " +
                            "     <Height></Height>\n" +
                            "      <Description></Description>\n" +
                            "      <LabelCode>" + sku.getString("bar_code") + "</LabelCode>\n" +
                            "      <LabelCode1></LabelCode1>\n" +
                            "      <LabelCode2></LabelCode2>\n" +
                            "      <LabelCode3></LabelCode3>\n" +
                            "      <SKUImageURL1>" + product.getString("pic_url") + "</SKUImageURL1>\n" +
                            "      <SKUImageURL2></SKUImageURL2>\n" +
                            "      <SKUImageURL3></SKUImageURL3>\n" +
                            "      <SKUImageURL4></SKUImageURL4>\n" +
                            "      <SKUImageURL5></SKUImageURL5>\n" +
                            "      <FirstUnit></FirstUnit>\n" +
                            "      <SecondUnit></SecondUnit>\n" +
                            "     <Brand></Brand>\n" +
                            "     <DueDays></DueDays>\n" +
                            "    <WarningStock></WarningStock>\n" +
                            "    </SKURegister>\n" +
                            "  </ServiceData>\n" +
                            "</Service>\n";

                    GYSkuBean skuBean = new GYSkuBean();
                    skuBean.setIdRecord(recordBean.getId());
                    skuBean.setAppKey(GuanYiPostUtil.APPKEY);
                    skuBean.setState(GYStatus.INIT.getValue());
                    skuBean.setTimes(0);
                    skuBean.setSkuCode(itemCode + "_" + skuCode);
                    skuBean.setCreateTime(new Date());
                    skuBean.setOmsRequest(omsXml);
                    skuBeans.add(skuBean);
                }
            }
            this.skuLogic.insertList(skuBeans);
            if(!skuLogic.getSuccess())
            {
                SystemOutMessage.body( this.skuLogic.getSuccess()+ this.skuLogic.getMessage());
                return;
            }
        }
        catch (Exception e)
        {
            SystemOutMessage.body(" false  " + e.getMessage());
        }
        SystemOutMessage.end("GuanYi_GetSkuRegister",sdf.format(new Date()));
    }
}
