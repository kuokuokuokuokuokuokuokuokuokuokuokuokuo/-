package com.ikats.scheduler.util;


import com.taobao.pac.sdk.cp.PacClient;
import com.taobao.pac.sdk.cp.SendSysParams;
import com.taobao.pac.sdk.cp.dataobject.request.TMS_WAYBILL_GET.*;
import com.taobao.pac.sdk.cp.dataobject.response.TMS_WAYBILL_GET.TmsWaybillGetResponse;
import com.taobao.pac.sdk.cp.dataobject.response.TMS_WAYBILL_GET.WaybillCloudPrintResponse;
import java.util.ArrayList;
import java.util.List;

/**
 * @Author : liu kuo
 * @Date : 2017/12/26 13:42.
 * @Description : Indulge in study , wasting away
 */
public class WuQingZz {

    /**
     * 线上环境请求 url
     */
    private final static String onlineUrl = "http://link.cainiao.com/gateway/link.do";
    /**
     * 线上环境 appKey ，物流云控制台查看
     */
  private final static String onlineAppKey = "966738";
//    private final static String onlineAppKey = "730944";
    /**
     * 线上环境 secretKey, 物流云控制台查看
     */
  private final static String onlineSecretKey = "085283e5H6643454549bGQ6D62848J00";
//    private final static String onlineSecretKey = "6B8p77720A98i50k70owK6s13kc1wvdN";
    /**
     * 线上环境 token，
     * token
     * 是商家在物流云平台授权 ISV
     * 后生成的授权码，目前需要商家配置在 ISV
     * 的软件中
     */
//  private final static String onlineToken = "WVJISm1uTnJWQzI4eGZtdERNakNmWFgweXhsRXFWbHYzOGhXM2dDcVNvUzRuaXcrcFYvWEtUL1RlZ1dIcmQ0VA==";
    private final static String onlineToken = "SjV2aG85cXc4QmpmMitoYTd4Z2pYUWtnTzNtRE9aU2FQcGxHaTg2MU5YTWNqaWNnK3NZRU5mbnI2U2d4amN4bA==";

    /**
     * 通过物流云获取电子面单
     *
     * @param args
     */
    public static void main(String[] args)
    {
        PacClient client = new PacClient(onlineAppKey, onlineSecretKey, onlineUrl);
        SendSysParams params = new SendSysParams();
        params.setFromCode(onlineToken);
        TmsWaybillGetRequest request = new TmsWaybillGetRequest();
        // 配送公司编码
        request.setCpCode("EMS");
        // 发件人信息
        UserInfoDto sender = new UserInfoDto();
        // 发件人姓名
        sender.setName("寄件人姓名");
        // 发件人固定电话
        sender.setPhone("02512345678");
        // 发件人手机号
        sender.setMobile("13000000000");

        // 寄件地址，这里的地址需要是卖家订购电子面单服务时使用的订购地址，
        // 具体可以通过TMS_WAYBILL_SUBSCRIPTION_QUERY接口获取
        AddressDto sendAddress = new AddressDto();
        sendAddress.setProvince("江苏省");
        sendAddress.setCity("南京市");
        sendAddress.setDistrict("江宁区");
        sendAddress.setDetail("将军大道 1 号");
        sendAddress.setTown("Town");
        sender.setAddress(sendAddress);
        request.setSender(sender);
        String objectId = "A";
        // 收件信息
        ArrayList<TradeOrderInfoDto> tradeOrderInfoDtos = new ArrayList<TradeOrderInfoDto>();
        TradeOrderInfoDto tradeOrderInfoDto = new TradeOrderInfoDto();
        tradeOrderInfoDto.setObjectId(objectId);
        String emsTemplateUrl = "http://cloudprint.cainiao.com/template/standard/701/114";
        // 打印模板的 url, 参见白皮书
        tradeOrderInfoDto.setTemplateUrl(emsTemplateUrl);
        tradeOrderInfoDto.setUserId(12L);

        OrderInfoDto orderInfoDto = new OrderInfoDto();
        orderInfoDto.setOrderChannelsType("TB");

        ArrayList<String> orderList = new ArrayList<String>();
        // 订单列表，这里的场景是 一个订单获取一个面单号
        orderList.add("1234567890");
        orderInfoDto.setTradeOrderList(orderList);
        tradeOrderInfoDto.setOrderInfo(orderInfoDto);

        PackageInfoDto packageInfoDto = new PackageInfoDto();
        //Zz
        packageInfoDto.setId("1");
        packageInfoDto.setVolume(1L);
        packageInfoDto.setWeight(1L);
        ArrayList<Item> items = new ArrayList<Item>();
        Item item = new Item();
        item.setName("衣服");
        item.setCount(1);
        items.add(item);
        packageInfoDto.setItems(items);
        tradeOrderInfoDto.setPackageInfo(packageInfoDto);

        UserInfoDto receiver = new UserInfoDto();
        receiver.setName("收件人姓名");
        receiver.setPhone("18211111111");
        receiver.setMobile("13100000000");
        AddressDto receiveAddress = new AddressDto();
        receiveAddress.setProvince("浙江省");
        receiveAddress.setCity("杭州市");
        receiveAddress.setDistrict("余杭区");
        receiveAddress.setDetail("文一西路 969号");
        receiveAddress.setTown("receive town");
        receiver.setAddress(receiveAddress);

        tradeOrderInfoDto.setRecipient(receiver);
        tradeOrderInfoDtos.add(tradeOrderInfoDto);
        request.setTradeOrderInfoDtos(tradeOrderInfoDtos);
        //Zz
        request.setStoreCode("无");
        request.setResourceCode("无");
        request.setDmsSorting(false);

        System.out.println(request.toString());

        TmsWaybillGetResponse response = client.send(request, params);
        if (!response.isSuccess()) {
            System.out.println("errorCode:" + response.getErrorCode() + ",errorMessage:" + response.getErrorMsg());
            return;
        }
        List<WaybillCloudPrintResponse> waybillCloudPrintResponseList = response.getWaybillCloudPrintResponseList();
        for (WaybillCloudPrintResponse waybillCloudPrintResponse : waybillCloudPrintResponseList) {
            if (objectId.equals(waybillCloudPrintResponse.getObjectId())) {
                System.out.println("get waybillCode:" + waybillCloudPrintResponse.getWaybillCode() + ",printData:" +
                        waybillCloudPrintResponse.getPrintData());
                // 使用 printData 和 templateUrl 调用本地云打印组件打印面单

            }

            System.out.println("objectId = " + waybillCloudPrintResponse.getObjectId());
            System.out.println("waybillCode = " + waybillCloudPrintResponse.getWaybillCode());
            System.out.println("printData = " + waybillCloudPrintResponse.getPrintData());
        }
    }
}
