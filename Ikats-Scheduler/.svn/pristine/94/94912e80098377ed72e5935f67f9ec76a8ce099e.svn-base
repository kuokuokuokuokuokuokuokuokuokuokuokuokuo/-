package com.ikats.scheduler.job;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.ikats.scheduler.entity.bean.JSTPurchaseOrderBean;
import com.ikats.scheduler.entity.enumerate.GYStatus;
import com.ikats.scheduler.logic.JSTPurchaseOrderLogic;
import com.ikats.scheduler.util.JuShuiTanPostUtil;
import com.ikats.scheduler.util.MD5Utils;
import com.ikats.scheduler.util.SystemOutMessage;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.quartz.QuartzJobBean;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

/**
 * @Author: Zhao Jianzhen
 * @Date: Created in 14:20 2018/1/3
 * @Description:
 */
public class JiShuiTanGetPurchaseOrdersJob extends QuartzJobBean {

    @Autowired
    private JSTPurchaseOrderLogic orderLogic;

    @Override
    protected void executeInternal(JobExecutionContext jobExecutionContext) throws JobExecutionException
    {
        String method = "purchase.query";
        Long ts = System.currentTimeMillis()/1000;

        JSONObject object = new JSONObject();
        object.put("modified_begin","2018-01-01 15:35:47");
        object.put("modified_end","2018-01-06 15:36:06");
        object.put("page_index",1);
        object.put("page_size",30);
        //sign	签名参数，按一定规则加密后的字符串 key,value  为传入的 get 参数，按传递顺序)(加密 key 中排除sign，method，partnerid)
        // MD5(method +partnerid + (key1+value1+key2+value2+……) +partnerkey)*/
        String url = JuShuiTanPostUtil.URL + "?token=" + JuShuiTanPostUtil.TOKEN + "&ts=" + ts + "&partnerid=" + JuShuiTanPostUtil.PARTNER_ID + "&method=" + method;
        String objectValue = "token" + JuShuiTanPostUtil.TOKEN + "ts" + ts;
        String sign = MD5Utils.md5(method + JuShuiTanPostUtil.PARTNER_ID + objectValue + JuShuiTanPostUtil.PARTNER_KEY);
        url = url + "&sign=" + sign;
        System.out.println(url);
        String msg = object.toJSONString();
        System.out.println(msg);

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SystemOutMessage.start("JuShuiTan_GetSkuRegister",sdf.format(new Date()));
        if(null == orderLogic)
        {
            SystemOutMessage.body("false 系统异常");
            return;
        }

        try {
            ArrayList<JSTPurchaseOrderBean> orderBeans = new ArrayList<JSTPurchaseOrderBean>();
            String result = JuShuiTanPostUtil.sendPost(url,msg);
            JSONObject jsStr = JSONObject.parseObject(result);
            JSONArray datas = jsStr.getJSONArray("datas");
            for (int i =0;i<datas.size();i++) {
                JSONObject order = (JSONObject) datas.get(i);
                Integer po_id = order.getInteger("po_id"); //订单号
                JSONArray items = order.getJSONArray("items");
                if(null == items)
                {
                    continue;
                }
                StringBuilder sb = new StringBuilder();
                sb.append("<Service>\n" +
                        "\t<ServiceURL>HaitaoInboundPlan</ServiceURL>\n" +
                        "\t<ServiceAction>neteasePurchase</ServiceAction>\n" +
                        "\t<UserName>MeiPu</UserName>\n" +
                        "\t<Platform>foursgo</Platform>\n" +
                        "\t<ChannelName>foursgo</ChannelName>\n" +
                        "\t<ServiceData>\n" +
                        "\t\t<contract_no/>\n" +
                        "\t\t<expect_arrival_time>"+sdf.format(new Date())+"</expect_arrival_time>\n" +
                        "\t\t<order_items>\n");
                for (int j=0;j<items.size();j++){
                    JSONObject item = items.getJSONObject(j);
                    sb.append("\t\t  <e>\n" +
                            "\t\t  \t<OrderItemId></OrderItemId>\n" +
                            "\t\t\t<barcode></barcode>\n" +
                            "\t\t\t<goods_en_name/>\n" +
                            "\t\t\t<goods_name>"+(item.getString("name")== null ? "":item.getString("name"))+"</goods_name>\n" +
                            "\t\t\t<product_no></product_no>\n" +
                            "\t\t\t<qty>"+(item.getInteger("qty")==null ? "":item.getInteger("qty"))+"</qty>\n" +
                            "\t\t\t<skuBarcode></skuBarcode>\n" +
                            "\t\t\t<sku_id>"+(item.get("sku_id") ==null ?"":item.get("sku_id"))+"</sku_id>\n" +
                            "\t\t\t<sku_name>"+(item.getString("name")== null ? "":item.getString("name"))+"</sku_name>\n" +
                            "\t\t<SN>3</SN>\n" +
                            "\t\t  </e>\n"
                    );

                }
                sb.append("\t\t</order_items>\n" +
                        "\t\t<purchase_id>"+(order.get("po_id")==null ? "":order.get("po_id"))+"</purchase_id>\n" +
                        "\t\t<remark>"+(order.getString("remark")==null ? "":order.getString("remark"))+"</remark>\n" +
                        "\t\t<stock_id>HK1</stock_id>\n" +
                        "\t\t<supplier_id>"+(order.getInteger("supplier_id") ==null ? "":order.getInteger("supplier_id"))+"</supplier_id>\n" +
                        "\t\t<NoEnvelope>Y</NoEnvelope>\n" +
                        "\t\t<prevInOrderCodeTallied/>\n" +
                        "\t</ServiceData>\n" +
                        "</Service>"
                );
                JSTPurchaseOrderBean orderBean = new JSTPurchaseOrderBean();
                orderBean.setAppKey(JuShuiTanPostUtil.PARTNER_ID);
                orderBean.setState(GYStatus.INIT.getValue());
                orderBean.setOrderNo(po_id.toString());
                orderBean.setOmsRequest(sb.toString());
                orderBean.setCreateTime(new Date());
                orderBean.setTimes(0);
                orderBeans.add(orderBean);
            }
            this.orderLogic.insertList(orderBeans);
            if(!orderLogic.getSuccess())
            {
                SystemOutMessage.body( this.orderLogic.getSuccess()+ this.orderLogic.getMessage());
                return;
            }

        }catch (Exception ex){
            SystemOutMessage.body(" false  " + ex.getMessage());
        }
        SystemOutMessage.end("JuShuiTan_GetOrders", sdf.format(new Date()));
    }
}
